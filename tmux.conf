# vim: fdm=marker fmr=〈,〉

# Essential Option 〈1

set-option -g default-terminal "screen-256color"
set-option -g default-shell '/opt/homebrew/bin/zsh'

# show pane indicator for 10s
set-option -g display-panes-time 10000

# 〉1

# Options 〈1

# mouse & key
set-option -g mode-keys vi
set-option -g mouse on

set-option -g remain-on-exit on

set-option -g default-size 150x450
set-option -g window-size largest

set-option -g base-index 1
set-option -g pane-base-index 1
set-option -g renumber-windows on

set-option -g automatic-rename off
set-option -g allow-rename off

set-option -g monitor-activity off

# let hook control it
set-option -g pane-border-status off
set-option -g pane-border-lines single

# 〉1

# Plugins 〈1

# List of plugins
set-option -g @plugin 'tmux-plugins/tpm'
set-option -g @plugin 'tmux-plugins/tmux-sensible'
set-option -g @plugin 'tmux-plugins/tmux-pain-control'
set-option -g @plugin 'tmux-plugins/tmux-sessionist'
set-option -g @plugin 'christoomey/vim-tmux-navigator'
set-option -g @plugin 'laktak/extrakto'


# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
# But the plugin somehow override my settings
set-environment -g TMUX_PLUGIN_MANAGER_PATH '~/.local/share/tmux'
run-shell '~/.local/share/tmux/plugins/tpm/tpm'

# 〉1

# Mapping 〈1

# prefix
unbind-key C-b
set-option -g prefix C-y
# set-option -g prefix2 C-y

bind-key : command-prompt
bind-key , customize-mode

# split
# prefix + [C-][h|j|k|l] to create new pane
bind-key h split-window -bh -c "#{pane_current_path}"
bind-key l split-window -h -c "#{pane_current_path}"
bind-key k split-window -bv -c "#{pane_current_path}"
bind-key j split-window -v -c "#{pane_current_path}"

bind-key C-h split-window -bh -c "#{pane_current_path}"
bind-key C-l split-window -h -c "#{pane_current_path}"
bind-key C-k split-window -bv -c "#{pane_current_path}"
bind-key C-j split-window -v -c "#{pane_current_path}"

# create pane with full width/height
bind-key H split-window -fbh -c "#{pane_current_path}"
bind-key L split-window -fh -c "#{pane_current_path}"
bind-key K split-window -fbv -c "#{pane_current_path}"
bind-key J split-window -fv -c "#{pane_current_path}"

bind-key u switch-client -l
bind-key C-u switch-client -l

# rename pane title
# prefix - $: rename session which is default setting
bind-key -N 'Rename current window' @ command-prompt -p 'rename window:' -I '#{window_name}' 'rename-window "%%"'
bind-key -N 'Rename current pane title' % command-prompt -p 'rename pane title:' "run-shell '${MDX_TMUX_DIR}/scripts/set-pane-label.zsh \"%%\"'"

# Popups 〈2

# Shell
bind-key -N 'Popup default command (zsh)' t display-popup -E -w70% -h70%

# Neovim
bind-key -N 'Popup Neovim' v display-popup -E -w70% -h70% 'nvim'

# GitUI
bind-key -N 'Popup GitUI' g display-popup -E -w70% -h70% gitui

# Git Tower
bind-key -N 'Launch Git Tower for current path' G run-shell 'gittower .'

# 

#〉2

# key tables
# for session swiching related features
run-shell "${MDX_TMUX_DIR}/scripts/key-table-dash.zsh"
# for respawning related features
run-shell "${MDX_TMUX_DIR}/scripts/key-table-r.zsh"
# for tmux ui settings
run-shell "${MDX_TMUX_DIR}/scripts/key-table-period.zsh"

# navigation
bind-key y switch-client -t 'Default:Main'
bind-key C-y run-shell tav

# 〉1

# Appearance 〈1

set-option -g set-titles off

# pane border label
# NOTE: must sync with `update-pane-border-format.zsh`
set-option -g pane-border-format '─'

# 〉1

# Alias 〈1

set-option -s command-alias[200] r='respawn-pane -k'
set-option -s command-alias[210] p='display-message'
set-option -s command-alias[220] s='split-window'

set-option -s command-alias[230] rl='source ~/.tmux.conf'

# 1〉

# Hooks
run-shell "${MDX_TMUX_DIR}/scripts/setup-hooks.zsh"

# Make `attach-sessesion` start server & create initial session if server does not exists.
# See `attach-session` doc for details.
new-session -s 'Default' -n 'Main'
