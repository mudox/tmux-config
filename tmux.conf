# vim: fdm=marker

# Essential Options                                                                {{{1

set-option -g default-terminal "screen-256color"
set-option -g default-shell '/opt/homebrew/bin/zsh'

# show pane indicator for 10s
set-option -g display-panes-time 10000

# }}}1

# Options                                                                          {{{1

# mouse & key
set-option -g mode-keys vi
set-option -g mouse on

set-option -g remain-on-exit on

set-option -g default-size 150x450
set-option -g window-size largest

set-option -g base-index 1
set-option -g pane-base-index 1
set-option -g renumber-windows on

set-option -g automatic-rename off
set-option -g allow-rename off

set-option -g monitor-activity off

# let hook control it
set-option -g pane-border-status off
set-option -g pane-border-lines single

# }}}1

# Plugins                                                                          {{{1

# List of plugins
set-option -g @plugin 'tmux-plugins/tpm'
set-option -g @plugin 'tmux-plugins/tmux-sensible'
set-option -g @plugin 'tmux-plugins/tmux-pain-control'
set-option -g @plugin 'tmux-plugins/tmux-sessionist'
set-option -g @plugin 'christoomey/vim-tmux-navigator'
set-option -g @plugin 'laktak/extrakto'


# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
# But the plugin somehow override my settings
set-environment -g TMUX_PLUGIN_MANAGER_PATH '~/.local/share/tmux'
run-shell '~/.local/share/tmux/plugins/tpm/tpm'

# }}}1

# Mappings                                                                         {{{1

# prefix
set-option -g prefix C-y
unbind-key C-b


# see https://github.com/neovim/neovim/issues/14298
# bind-key -n m-[ select-window -p
# bind-key -n m-] select-window -n

bind-key : command-prompt

# split
# prefix + [C-][h|j|k|l] to create new pane
bind-key h split-window -bh -c "#{pane_current_path}"
bind-key l split-window -h -c "#{pane_current_path}"
bind-key k split-window -bv -c "#{pane_current_path}"
bind-key j split-window -v -c "#{pane_current_path}"

bind-key C-h split-window -bh -c "#{pane_current_path}"
bind-key C-l split-window -h -c "#{pane_current_path}"
bind-key C-k split-window -bv -c "#{pane_current_path}"
bind-key C-j split-window -v -c "#{pane_current_path}"

# create pane with full width/height
bind-key H split-window -fbh -c "#{pane_current_path}"
bind-key L split-window -fh -c "#{pane_current_path}"
bind-key K split-window -fbv -c "#{pane_current_path}"
bind-key J split-window -fv -c "#{pane_current_path}"

bind-key u switch-client -l
bind-key C-u switch-client -l

# respawn
bind-key r respawn-pane
bind-key c-r run-shell "${MDX_TMUX_DIR}/scripts/respawn.zsh"

# rename pane title
bind-key -N 'Rename current window' @ command-prompt -p 'rename window:' 'rename-window "%%"'
bind-key -N 'Rename current pane title' % command-prompt -p 'rename pane title:' 'select-pane -T "%%"'

# popups            {{{2

# Shell
bind-key -N 'Popup default command (zsh)' t display-popup -E -w70% -h70%

# Neovim
bind-key -N 'Popup Neovim' v display-popup -E -w70% -h70% 'nvim -c "packadd telescope.nvim" -c "Telescope oldfiles"'

# GitUI
bind-key -N 'Popup GitUI' g display-popup -E -w70% -h70% gitui

# 

#}}}2

# }}}1

# Appearance                                                                      {{{1

set -as terminal-overrides ",*:U8=0"

set -g set-titles off

# `[index] {title}`
# onlys how title if it exsits
set-option -g pane-border-format '[#P]#{?#{!=:#T,#{host}}, #T,}'

# tmuxline
source-file '/Users/mudox/.tmux/tmuxline'

# distinguish active pane from inactive pane
# NOTE: stay after tmuxline
# set-option -g window-active-style 'bg=#111111'
# set-option -g window-style 'bg=default'
# set-option -g pane-border-style 'fg=#111111,bg=#111111'
# set-option -g pane-active-border-style 'fg=#111111,bg=#111111'

# }}}1

# Navigation {{{1

# tav
bind-key y switch-client -t 'Default:Main'
bind-key C-y run-shell tav

# key table 'mudox'
run-shell "${MDX_TMUX_DIR}/scripts/key-table-mudox.zsh"

#}}}1

# Hooks
run-shell "${MDX_TMUX_DIR}/scripts/setup-hooks.zsh"
