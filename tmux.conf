#  vim: fdm=marker fmr=\ 〈,\ 〉

# Essential Options 〈1

# set-option -g default-terminal "screen-256color"
run-shell "${MDX_TMUX_DIR}/scripts/set-default-terminal.zsh"
set-option -g default-shell '/opt/homebrew/bin/zsh'
set-option -g default-command '/opt/homebrew/bin/zsh'

# show pane indicator for 10s
set-option -g display-panes-time 10000

set-option -sa terminal-features ',xterm-kitty:RGB'

# # 〉1

# Options 〈1

set -g allow-passthrough 1

# mouse & key
set-option -g mode-keys vi
set-option -g mouse on

set-option -g remain-on-exit on

set-option -g default-size 421x101
set-option -g window-size largest

set-option -g base-index 1
set-option -g pane-base-index 1
set-option -g renumber-windows on

set-option -g automatic-rename off
set-option -g allow-rename off

set-option -g monitor-activity off

# let hook control it
set-option -g pane-border-status off
set-option -g pane-border-lines single

# 〉1

# Plugins 〈1

# List of plugins
set-option -g @plugin 'tmux-plugins/tpm'
set-option -g @plugin 'tmux-plugins/tmux-sensible'
set-option -g @plugin 'tmux-plugins/tmux-sessionist'
set-option -g @plugin 'christoomey/vim-tmux-navigator'

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
# But the plugin somehow override my settings
set-environment -g TMUX_PLUGIN_MANAGER_PATH '~/.local/share/tmux'
run-shell '~/.local/share/tmux/plugins/tpm/tpm'

# 〉1

# Key Mapping 〈1

# Prefix
unbind-key C-b
set-option -g prefix C-y
# set-option -g prefix2 C-y

# Run command
bind-key : command-prompt

# Settings UI
bind-key , customize-mode

bind-key c new-window -c "#{pane_current_path}"

# Split
# Create pane relative to current pane
bind-key h   split-window -bh  -c "#{pane_current_path}"
bind-key l   split-window -h   -c "#{pane_current_path}"
bind-key k   split-window -bv  -c "#{pane_current_path}"
bind-key j   split-window -v   -c "#{pane_current_path}"

bind-key C-h split-window -bh  -c "#{pane_current_path}"
bind-key C-l split-window -h   -c "#{pane_current_path}"
bind-key C-k split-window -bv  -c "#{pane_current_path}"
bind-key C-j split-window -v   -c "#{pane_current_path}"

# Create pane with full width/height
bind-key H   split-window -fbh -c "#{pane_current_path}"
bind-key L   split-window -fh  -c "#{pane_current_path}"
bind-key K   split-window -fbv -c "#{pane_current_path}"
bind-key J   split-window -fv  -c "#{pane_current_path}"

# Rename
# window
bind-key -N 'Rename current window' '@' command-prompt -p 'rename window:' -I '#{window_name}' 'rename-window "%%"'
# pane
bind-key -N 'Rename current pane' '%' command-prompt -p 'rename pane title:' "run-shell '${MDX_TMUX_DIR}/scripts/set-pane-label.zsh \"%%\"'"

# Popups 〈2

# Shell
bind-key -N 'Popup Zsh' t display-popup -E -w70% -h70%

# Neovim
bind-key -N 'Popup Neovim' v display-popup -E -w70% -h80% 'nvim'

# Git
bind-key -N 'Popup LazyGit' g     display-popup -E -w70% -h80% '/opt/homebrew/bin/lazygit'
bind-key -N 'Popup GitUI'   G     display-popup -E -w70% -h80% '/opt/homebrew/bin/gitui'
bind-key -N 'GitTower'      'C-g' run-shell     '/usr/local/bin/gittower .'

#

# 〉2

# Switch between sessions
run-shell "${MDX_TMUX_DIR}/scripts/key-table-meta-y.zsh"

# Respawn
bind-key -N 'Show respawn menu'      'r'   run-shell      "${MDX_TMUX_DIR}/scripts/show-menu-respawn.zsh"
bind-key -N 'Respawn current pane'   'R'   respawn-pane   -k
# ISSUE: respawning window with multiple non-neovim panes crashes the server
# bind-key -N 'Respawn current window' 'C-r' respawn-window -k
# TODO: respawn known session

# for tmux ui settings
run-shell "${MDX_TMUX_DIR}/scripts/key-table-period.zsh"

# 〉1

# Appearance 〈1

set-option -g set-titles off

# pane border label
# NOTE: must sync with `update-pane-border-format.zsh`
set-option -g pane-border-format '─'

# 〉1

# Alias 〈1

set-option -s command-alias[200] r='respawn-pane -k'
set-option -s command-alias[210] p='display-message'
set-option -s command-alias[220] s='split-window'
set-option -s command-alias[240] rr='resize-pane -t "{right}" -x'

# ISSUE: reloading conf would recreate `Default` session
# set-option -s command-alias[1000] rl='source ~/.tmux.conf'

# 〉1

# Hooks
run-shell "${MDX_TMUX_DIR}/scripts/setup-hooks.zsh"

new-session -A -s 'Default' -n 'Main'
new-window -t 'Default:2' -n 'Top' -d btop
